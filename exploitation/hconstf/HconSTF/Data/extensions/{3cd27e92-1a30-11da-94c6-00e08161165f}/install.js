/* install.js, for SpiderZilla 1.6 (written by BatBat) */

var author      = "Lenrock";
var displayName = "SpiderZilla";
var version     = "1.6";
var packageName = "spiderzilla";
var packageFile = packageName + ".jar";

var jarDir     = "chrome";
var defaultsDir= "defaults";
var httrackDir = "httrack";
var destDir    = getFolder("Profile");
var temp       = getFolder(destDir, "extensions/");
var installDir = getFolder(temp, "{3cd27e92-1a30-11da-94c6-00e08161165f}/");
var jarDestDir = getFolder(installDir,"chrome/");
var defaultsDestDir = getFolder(installDir, "defaults/");
var httrackDestDir = getFolder(installDir, "httrack/");
var jarFile    = getFolder(jarDestDir,packageFile);
var err        = UNEXPECTED_ERROR;

var msg = displayName + " " + version + " only installs into the profile directory. (OK) to continue or (Cancel) to abort the installation?";

try {
	if(!confirm(msg))
		cancelInstall();
	else
	{
		// Init the installation
		err = initInstall(displayName + " " + version, "/" + author + "/" + displayName, version);
		if (err)
			throw('error initInstall: ' + err);
		
		// Configure the JAR file
		err = setPackageFolder(installDir);
		if (err)
			throw('error setPackageFolder: ' + err);
		err = Install.addDirectory("jar", jarDir, jarDestDir , null);
		if (err)
			throw('error jar addDirectory:' + "jarDestDir" + err);
		//err = Install.addFile(packageName, version, "chrome/" + packageFile, jarDestDir, null, true);
		//if (err)
		//	throw('error jar addFile:' + err);
		err = Install.addDirectory("defaults", defaultsDir, defaultsDestDir, null);
		if (err)
			throw('error defaults addDirectory:' + err);
		err = Install.addDirectory("httrack", version, httrackDir, httrackDestDir, null);
		if (err)
			throw('error httrack addDirectory:' + err);

		// Register the chrome content and locale data
		err = Install.registerChrome(CONTENT | PROFILE_CHROME, jarFile, "content/spiderzilla/");
		if (err)
			throw('error content register:' + err);
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/en-US/spiderzilla/");
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/cs-CZ/spiderzilla/");
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/de-DE/spiderzilla/");
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/es-AR/spiderzilla/");
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/es-ES/spiderzilla/");
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/fr-FR/spiderzilla/");
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/it-IT/spiderzilla/");
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/pl-PL/spiderzilla/");
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/ru-RU/spiderzilla/");
		err = Install.registerChrome(LOCALE | PROFILE_CHROME, jarFile, "locale/sk-SK/spiderzilla/");

		if (err)
			throw('error locale register:' + err);
		err = Install.registerChrome(SKIN | PROFILE_CHROME, jarFile, "skin/classic/spiderzilla/");
		if (err)
			throw('error skin register:' + err);
		
		// Install the extension
		err = Install.performInstall();
		if (err)
			throw('error performInstall:' + err);
		if (error==999) 
			alert("Installation complete. Please restart Mozilla to update the changes.");
	}
	err = SUCCESS;
}
catch (message) {
	if (err != SUCCESS)	{
		logComment('catching something');
		logComment('err is ' + err);
		// we can't possibly be trying to catch no error
		if (SUCCESS == err)
			err = getLastError() || SCRIPT_ERROR;
		logComment(message);
		cancelInstall(err);
	} else
		logComment('Installation of ' + displayName + version + ' completed successfully !');
}

