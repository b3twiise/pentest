<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/global.css" type="text/css"?>
<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	xmlns:html="http://www.w3.org/1999/xhtml">
	<script type="application/x-javascript">
        Components.utils.import("resource://flashfirebuglibs/prepare.js");
        </script>
        <script>
		<![CDATA[
        flashfirebugInit = {
          jscode: "function flashfirebug_cache_xhr(url) {" + 
          'var element = document.createElement("FlashFirebugTempElement");' +
           'element.setAttribute("url", url);' +
           'document.documentElement.appendChild(element);' +
 
           'var evt = document.createEvent("Events");' +
           'evt.initEvent("flashfirebug_cache_xhr", true, false);' +
           'element.dispatchEvent(evt);' + 
           'element.parentNode.removeChild(element);' + 
          "}",
          cleanup: function() {
            flashfirebugPrepare.cleanup();
          },
          xhrCache: function(evt) {
            var xhr = new XMLHttpRequest();
            xhr.open('GET', evt.target.getAttribute("url"), true);
            
            xhr.responseType = 'arraybuffer';
            
            xhr.onload = function(e) { /* we're just caching requests so nothing to do here */ }
            
            xhr.send();
          },
          addScript: function(docRef, id, scriptString) {
              var scriptableUnescapeHTML = Components.classes["@mozilla.org/feed-unescapehtml;1"]
                                   .getService(Components.interfaces.nsIScriptableUnescapeHTML);
              var element = docRef.createElementNS("http://www.w3.org/1999/xhtml", "html:script");
              element.setAttribute("type", "text/javascript");
              element.setAttribute("id", id);
              element.firebugIgnore = true;
              element.textContent = '';
              element.appendChild(scriptableUnescapeHTML.parseFragment(
            "try{"+scriptString+"}catch(e){}", false, null, element));

              if (docRef.documentElement){
                  docRef.documentElement.appendChild(element);
              }
              if (element && element.parentNode)
                element.parentNode.removeChild(element);
          }
        };
        
        window.addEventListener("load", function load(event){
            window.removeEventListener("load", load, false); //remove listener, no longer needed
            var appcontent = document.getElementById("appcontent");   // browser
            if(appcontent){
              appcontent.addEventListener("DOMContentLoaded", function(aEvent) {
                var doc = aEvent.originalTarget;
                // Seems this is triggered for ALL windows, so check for web or at least file loading
                if (doc.location.href.toLowerCase().indexOf("http") == 0 
                  || doc.location.href.toLowerCase().indexOf("file") == 0) {
                  flashfirebugInit.addScript(doc, "__flashfirebug_dom_script", flashfirebugInit.jscode);
                  doc.addEventListener("flashfirebug_cache_xhr", function(e) { flashfirebugInit.xhrCache(e); }, false, true);
                }
              }, true);
            }
        },false);
        
        //if FlashBlock is installed, we won't register flashfirebug.css, 
        //but listen and handle "flashblockCheckLoad" event
        //in "flashblockCheckLoad" eventhandler, we make the swf accessiable by Flashfirebug.
        try {
          Application.getExtensions(function(extensions) {
          	var fbid = "{3d7eb24f-2740-49df-8937-200b1cc08f8a}";
              var ext = extensions.get(fbid);
              if(!ext || !ext.enabled){
        		  flashfirebugPrepare.registerCSS();
              }
          })
        } catch (ex) { // Firefox 3.x
  		  flashfirebugPrepare.registerCSS();
        }
        
        window.addEventListener("flashblockCheckLoad", function(e) {
     			var swf = e.target;
     			if(swf.getAttribute("src") && swf.getAttribute("src").indexOf('chrome:') >= 0){
     				e.preventDefault();
     				e.stopPropagation();
     			}else{
     				try{
     					if(!swf.getAttribute("id")){
     						swf.setAttribute("id", "flashfirebug_" + (new Date()).getTime());
     					}
     					
						function nativeMethod(untrustedObject, methodName)
		     			{
		     			  // happier stack traces and faster multiple calls
		     			  var fun = Components.lookupMethod(untrustedObject, methodName);
		     			  
		     			  return function()
		     			  {
		     			    return fun.apply(untrustedObject, arguments);
		     			  }
		     			}
		     			
		     			document.QueryInterface(Components.interfaces.nsIDOMDocument);
		     			var createElement = nativeMethod(document, "createElementNS");
     					
     					if (swf.tagName.toUpperCase() == 'OBJECT') {
							// 判断是不是有<param name="allowScriptAccess" value="always" /> 和
							// <param name="allowFullScreen" value="true" />
							
							//var childs = swf.childNodes;
							var childs = swf.getElementsByTagName("param");
							var needAppendScriptAccess = true;
							var needAppendFullScreen = true;
							var needAppendNetWorking = true;
							for ( var i = 0; i < childs.length; i++) {
								var param = childs[i];
								if (param.hasAttribute("name") && param.getAttribute("name").toUpperCase() == "ALLOWSCRIPTACCESS") {
									swf.appendChild(param);
									param.value = "always";
									needAppendScriptAccess = false;
								}
								if (param.hasAttribute("name") && param.getAttribute("name").toUpperCase() == "ALLOWFULLSCREEN") {
									param.value = "true";
									needAppendFullScreen = false;
								}
								if (param.hasAttribute("name") && param.getAttribute("name").toUpperCase() == "ALLOWNETWORKING") {
									param.value = "all";
									needAppendNetWorking = false;
								}
							}
					
							if (needAppendFullScreen) {
								param = createElement("http://www.w3.org/1999/xhtml", "param");
								param.name = "allowFullScreen";
								param.value = "true";
								swf.appendChild(param);
							}
							if (needAppendScriptAccess) {
								param = createElement("http://www.w3.org/1999/xhtml", "param");
								param.name = "allowScriptAccess";
								param.value = "always";
								swf.appendChild(param);
							}
							if (needAppendNetWorking) {
								param = createElement("http://www.w3.org/1999/xhtml", "param");
								param.name = "AllowNetworking";
								param.value = "all";
								swf.appendChild(param);
							}
					
						} else if (swf.tagName.toUpperCase() == 'EMBED') {
							if(swf.getAttribute("name")){
							}else{
								swf.setAttribute("name", swf.getAttribute("id"));
							}
							swf.setAttribute("allowscriptaccess", "always");
							swf.setAttribute("allowfullscreen", "true");
							swf.setAttribute("allownetworking", "all");
						}
     					
     				}catch(error){
     				}
     			}
		}, true, true);
		]]>
    </script>
    <box>
            <!-- embed a swf to force Flash Player init -->
            <html:embed id="flashfirebug_init_flash_player"
                    src="chrome://flashbug/content/null.swf"
                    allowScriptAccess="always" type="application/x-shockwave-flash"
                    allowfullscreen="true" menu="false" width="0"
                    height="0" style="width:0px;height:0px;" />
    </box>
</overlay>
